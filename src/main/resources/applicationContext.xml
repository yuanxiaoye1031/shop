<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!--    开启spring注解-->
    <context:component-scan base-package="cn.edu.hit" use-default-filters="true">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!--    引入jdbc-->
    <context:property-placeholder location="classpath:jdbc.properties"></context:property-placeholder>


    <!--    指定数据源-->
    <bean class="com.alibaba.druid.pool.DruidDataSource" id="dataSource">
        <property name="driverClassName" value="${dis}"/>
        <property name="url" value="${url}"/>
        <property name="username" value="${user_name}"/>
        <property name="password" value="${pass}"/>
    </bean>

    <!--    配置sqlsession对象-->
    <bean class="org.mybatis.spring.SqlSessionFactoryBean" id="sqlSessionFactory">
        <!--        指定数据源-->
        <property name="dataSource" ref="dataSource"></property>
        <!--        起别名-->
        <property name="typeAliasesPackage" value="cn.edu.hit.po"></property>
        <!--        关联映射文件-->
        <property name="mapperLocations" value="classpath:mapper/*.xml"></property>

        <!--pageHelper-->
        <property name="plugins">
            <array>
                <bean class="com.github.pagehelper.PageInterceptor">
                    <property name="properties">
                        <!--使用下面的方式配置参数，一行配置一个 -->
                        <value>
                            helperDialect=postgresql
                            reasonable=true
                            supportMethodsArguments=true
                            params=count=countSql
                            autoRuntimeDialect=true
                        </value>
                    </property>
                </bean>
            </array>
        </property>
    </bean>

    <!--    将dao层注入到spring容器中-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--        注入链接对象-->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
        <!--        扫描包-->
        <property name="basePackage" value="cn.edu.hit.dao"></property>
    </bean>

    <!--    1,指定事务管理器   提前导入spring-tx事务包 & tx的头部导入-->
    <bean class="org.springframework.jdbc.datasource.DataSourceTransactionManager" id="transactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <!--    2,开启事务注解-->
    <tx:annotation-driven transaction-manager="transactionManager"></tx:annotation-driven>


</beans>